---
###########################################################################
# INSTALLATION                                                            #
###########################################################################

- name: ossec - check if installed
  command: /bin/true creates={{ ossec.install_dir }}
  register: installed
  tags: ossec

- name: ossec - download ossec tarball
  copy: src=ossec-binary.tar dest={{ ossec.tmp_dir }}/{{ ossec.tarball }} owner=root group=root mode=0600
  when: installed.changed is defined and installed.changed
  register: tarball
  tags: ossec

- name: ossec - untar the tarball
  command: /bin/tar -xvf {{ ossec.tmp_dir }}/{{ ossec.tarball }} chdir={{ ossec.tmp_dir }} creates={{ ossec.tmp_dir }}/{{ ossec.untar_dir }}
  when: tarball.changed is defined and tarball.changed
  tags: ossec

- name: ossec - configure preloaded-vars.conf
  template: dest={{ ossec.tmp_dir }}/{{ ossec.untar_dir}}/etc/preloaded-vars.conf backup=yes
  first_available_file:
   - "{{ ansible_hostname }}_preloaded-vars.conf.j2"
   - preloaded-vars.conf.j2
  when: tarball.changed is defined and tarball.changed
  tags: ossec

- name: ossec - build/install the agent
  command: ./install.sh chdir={{ ossec.tmp_dir }}/{{ ossec.untar_dir }}
  when: (installed.changed is defined and installed.changed) or (tarball.changed is defined and tarball.changed)
  tags: ossec

###########################################################################
# CONFIGURATION                                                           #
###########################################################################

- name: ossec - configure the agent (ossec.conf)
  template: dest={{ ossec.install_dir }}/etc/ossec.conf owner=root group=ossec mode=0440 backup=yes
  first_available_file:
    - "{{ ansible_hostname }}_ossec.conf.j2"
    - ossec.conf.j2
  notify:
    - ossec - restart agent
  tags: ossec

- name: ossec - configure the agent (internal_options.conf)
  template: dest={{ ossec.install_dir }}/etc/internal_options.conf owner=root group=ossec mode=0440 backup=yes
  first_available_file:
    - "{{ ansible_hostname }}_internal_options.conf.j2"
    - internal_options.conf.j2
  notify:
    - ossec - restart agent
  tags: ossec

- name: ossec - configure the agent key
  template: dest={{ ossec.install_dir }}/etc/client.keys owner=ossec group=ossec mode=0644 backup=yes
  first_available_file:
    - "{{ ansible_hostname }}_client.keys.j2"
    - client.keys.j2
  register: client_key
  notify:
    - ossec - restart agent
  tags: ossec

###########################################################################
# SERVER KEY SYNC                                                         #
###########################################################################

- name: ossec - save client.keys to a variable
  shell: cat {{ ossec.install_dir }}/etc/client.keys
  when: client_key.changed
  register: server_key
  tags: ossec

- name: ossec - copy key to ossec.server
  template: dest={{ ossec.install_dir }}/etc/keys/{{ ansible_hostname }} owner=root group=root mode=0400
  first_available_file:
    - server.key.j2
  when: client_key.changed
  delegate_to: "{{ ossec.server }}"
  tags: ossec

- name: ossec - remove stale rids file
  file: path={{ ossec.install_dir }}/queue/rids/{{ server_key.stdout.split()[0] }} state=absent
  when: client_key.changed
  notify: ossec - restart server
  delegate_to: "{{ ossec.server }}"
  tags: ossec

- name: ossec - assemble server keys file from fragments
  assemble: src={{ ossec.install_dir }}/etc/keys dest={{ ossec.install_dir }}/etc/client.keys owner=ossec group=root mode=0644 backup=yes
  delegate_to: "{{ ossec.server }}"
  notify: ossec - restart server
  tags: ossec

 
